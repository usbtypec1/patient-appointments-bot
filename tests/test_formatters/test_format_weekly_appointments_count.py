from datetime import date

import pytest

from formatters import format_weekly_appointments_count
from models import DailyPatientAppointmentsCountDTO


def test_format_weekly_appointments_count_no_appointments():
    weekly_appointments_count = []

    result = format_weekly_appointments_count(weekly_appointments_count)

    expected_output = 'üòî –ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –Ω–µ—Ç –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤'
    assert result == expected_output


def test_format_weekly_appointments_count_one_day():
    weekly_appointments_count = [
        DailyPatientAppointmentsCountDTO(
            date=date(2023, 9, 18),  # Monday
            count=5
        )
    ]

    result = format_weekly_appointments_count(weekly_appointments_count)

    expected_output = (
        '<b>üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ:</b>\n'
        '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (18.09.2023): 5 –ø–∞—Ü–∏–µ–Ω—Ç(–æ–≤)'
    )
    assert result == expected_output


def test_format_weekly_appointments_count_multiple_days():
    weekly_appointments_count = [
        DailyPatientAppointmentsCountDTO(
            date=date(2023, 9, 18),
            count=5
        ),
        DailyPatientAppointmentsCountDTO(
            date=date(2023, 9, 20),
            count=3
        ),
        DailyPatientAppointmentsCountDTO(
            date=date(2023, 9, 22),
            count=7
        )
    ]

    result = format_weekly_appointments_count(weekly_appointments_count)

    expected_output = (
        '<b>üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ:</b>\n'
        '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (18.09.2023): 5 –ø–∞—Ü–∏–µ–Ω—Ç(–æ–≤)\n'
        '–°—Ä–µ–¥–∞ (20.09.2023): 3 –ø–∞—Ü–∏–µ–Ω—Ç(–æ–≤)\n'
        '–ü—è—Ç–Ω–∏—Ü–∞ (22.09.2023): 7 –ø–∞—Ü–∏–µ–Ω—Ç(–æ–≤)'
    )
    assert result == expected_output


if __name__ == '__main__':
    pytest.main()
